* [Day 2] Dive
** Org mode :noexport:
   This is written in literate programming with org-babel and ruby. Reading this file won't help you to understand quickly. Please refers to the generated markdown file
   
** Part one
*** Test data

#+begin_src ruby :exports both  :noweb yes
    File.readlines("test.txt").group_by{ |x| (x.include?("up") || x.include?("down")) }.values.map{ |x| x.map{ |x|
                                                                                if x.include?("up")
                                                                                  -(x[/\d+/].to_i)
                                                                                else
                                                                                  x[/\d+/].to_i
                                                                                end
                                                                               }.sum }.inject(:*)
#+end_src

#+RESULTS:
: 150

*** Input data 
#+begin_src ruby :exports both  :noweb yes
    File.readlines("input.txt").group_by{ |x| (x.include?("up") || x.include?("down")) }.values.map{ |x| x.map{ |x|
                                                                              if x.include?("up")
                                                                                -(x[/\d+/].to_i)
                                                                              else
                                                                                x[/\d+/].to_i
                                                                              end
                                                                             }.sum }.inject(:*)
#+end_src

#+RESULTS:
: 2036120

** Part two
*** Test data
 #+begin_src ruby :exports both :noweb yes
    File.readlines("test.txt").map do |x|
      if x.include? "forward"
        $horizontal = ($horizontal || 0) + x[/\d+/].to_i
        $depth ||= 0 
        $depth += ($aim || 0) * x[/\d+/].to_i
      elsif x.include? "down"
        $aim = ($aim || 0) + x[/\d+/].to_i
      else
        $aim = ($aim || 0) - x[/\d+/].to_i
      end
    end.map { |x| $horizontal * $depth }.first
#+end_src                                                                              

#+RESULTS:
: 900

*** Input data
 #+begin_src ruby :exports both :noweb yes
    File.readlines("input.txt").map do |x|
      if x.include? "forward"
        $horizontal = ($horizontal || 0) + x[/\d+/].to_i
        $depth ||= 0 
        $depth += ($aim || 0) * x[/\d+/].to_i
      elsif x.include? "down"
        $aim = ($aim || 0) + x[/\d+/].to_i
      else
        $aim = ($aim || 0) - x[/\d+/].to_i
      end
    end.map { |x| $horizontal * $depth }.first
#+end_src                                                                              

#+RESULTS:
: 2015547716
