* [Day 1] Sonar Sweep
 
** Increment counter
#+NAME: increment_counter
#+BEGIN_SRC ruby :session  
  def increment_counter(array)
   count = 0
   array.each_cons(2) do |first, second|
     count += 1 if second > first
   end
   count
  end
#+END_SRC

#+RESULTS: increment_counter
: :increment_counter

** Part One
*** Test data
   
    #+BEGIN_SRC ruby :exports both  :noweb yes 
      input = File.readlines("test.txt").map(&:to_i)
      <<increment_counter>>
      "Result: #{increment_counter(input)}"
    #+END_SRC

    #+RESULTS:
    : Result: 7

*** Input data 
    #+BEGIN_SRC ruby :exports both :noweb yes
      input = File.readlines("input.txt").map(&:to_i)
      <<increment_counter>>
      "Result: #{increment_counter(input)}"
    #+END_SRC

    #+RESULTS:
    : Result: 1226
    
** Part Two
*** Test data
   #+BEGIN_SRC ruby :exports both :noweb yes
     sum_array = []
     File.readlines("test.txt").map(&:to_i).each_cons(3) do |first_num, second_num, third_num|
        sum_array << first_num + second_num + third_num
     end
      <<increment_counter>>
     "Result: #{increment_counter(sum_array)}"
   #+END_SRC

   #+RESULTS:
   : Result: 5
*** Input data   
   #+BEGIN_SRC ruby :exports both :noweb yes
     sum_array = []
     File.readlines("input.txt").map(&:to_i).each_cons(3) do |first_num, second_num, third_num|
        sum_array << first_num + second_num + third_num
     end
      <<increment_counter>>
     "Result: #{increment_counter(sum_array)}"
   #+END_SRC

   #+RESULTS:
   : Result: 1252
